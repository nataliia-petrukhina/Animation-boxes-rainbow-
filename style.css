* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


body{
    height: 100vh;
    animation: regenbogen 40s ease-out infinite reverse;
}
main { margin-top:15rem; 
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
 
}

.box {
    border: 2px solid brown;
    background: rgb(242, 242, 242);
    width: 200px;
    height: 200px;
    margin: 10px;
    display: grid;
    place-items: center;
    overflow: hidden;

}

.innerbox {
    display: grid;
    place-items: center;
    width: 100px;
    height: 100px;
    border: 2px solid rgb(119, 221, 216);
/*     transform: skewX(-30deg); !!!! transformation
 */}

/* animation erstellen  mit from und to*/
@keyframes rotation

/*  die name */
    {
    from {
        rotate: 0deg;
    }

    to {
        rotate: 360deg;
    }
}

.rotate {
    animation-name: rotation;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-play-state: paused;
}

.box:hover .rotate {
    animation-play-state: running;
}

/* animation erstellen mit %
 */
@keyframes regenbogen {
    0% {
        background-color: rgb(247, 139, 139);
    }

    15% {
        background-color: rgb(252, 226, 178);
    }

    30% {
        background-color: rgb(250, 250, 151);
    }

    45% {
        background-color: rgb(177, 251, 177);
    }

    60% {
        background-color: rgb(204, 204, 255);
    }

    75% {
        background-color: rgb(211, 172, 238);
    }

    100% {
        background-color: rgb(255, 178, 178);
    }
}

.rainbow{
    animation: regenbogen 6s ease-out infinite;
}

@keyframes glitch {

    /* CSS transforms are extremely powerful */
    10% {
        transform: skewX(0deg)
    }

    11% {
        transform: skewX(-10deg)
    }

    12% {
        transform: skewX(0deg)
    }

    49% {
        transform: skewX(0deg)
    }

    50% {
        transform: skewX(87deg)
    }

    51% {
        transform: skewX(0deg)
    }

    70% {
        transform: skewX(0deg)
    }

    71% {
        transform: skewX(-77deg)
    }

    72% {
        transform: skewX(0deg)
    }

    75% {
        transform: skewX(0deg)
    }

    76% {
        transform: skewX(47deg)
    }

    77% {
        transform: skewX(0deg)
    }

    98% {
        transform: skewX(0deg)
    }

    100% {
        transform: skewX(-30deg)
    }
}

.innerbox:has(input){
    animation: glitch 2s linear 3;
    animation-play-state: paused;
 animation-fill-mode: forwards}

.innerbox:has(input:checked){
    animation-play-state: running;
}

@keyframes tschuss{
    to{
        top: -150px;
    }
}

.bye{
    position: relative;
    top: 0px;
 animation: tschuss 6s linear 1 forwards;
 animation-play-state: paused;
}

.box:hover .bye{
    animation-play-state: running;
}